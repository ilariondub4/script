// ==UserScript==
// @name Universal main
// @namespace Violentmonkey Scripts
// @match https://portal.minv.sk/wps/portal/domov/ecu/ecu_elektronicke_sluzby/ecu-vysys/*
// @grant none
// @version 1.6
// @author -
// @description –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏ MINV –∑ Telegram, CAPTCHA, GPT-4o, DeepSeek, —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏ —Ç–∞ UI –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.
// @run-at document-start
// ==/UserScript==

(function () {
    'use strict';

    // –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è –∑—É–ø–∏–Ω–∫–æ—é/–ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è–º —Å–∫—Ä–∏–ø—Ç–∞
    let isScriptStopped = localStorage.getItem('isScriptStopped') === 'true' || false;
    let currentCityIndex = parseInt(localStorage.getItem('currentCityIndex') || '0', 10);
    const availableCities = ['Bansk√° Bystrica', 'Bratislava', 'Dunajsk√° Streda', 'Ko≈°ice', 'Michalovce', 'Nitra', 'Nov√© Z√°mky', 'Pre≈°ov', 'Rimavsk√° Sobota', 'Ru≈æomberok', 'Trenƒç√≠n', 'Trnava', '≈Ωilina'];
    // USER_CITIES —Ç–µ–ø–µ—Ä –º–æ–∂–µ –º—ñ—Å—Ç–∏—Ç–∏ –¥–∞—Ç–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: ["OCP Michalovce - 12.12.2025", "OCP Bratislava"]
    const USER_CITIES = JSON.parse(localStorage.getItem('USER_CITIES') || '["OCP Michalovce", "OCP Bratislava"]');
    let USER_CITY_FULL_STRING = USER_CITIES[currentCityIndex]; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥ "OCP Michalovce - 12.12.2025"
    let USER_CITY_PREFIX = USER_CITY_FULL_STRING.split(' - ')[0]; // –ù–∞–ø—Ä–∏–∫–ª–∞–¥ "OCP Michalovce"

    // –û–Ω–æ–≤–ª–µ–Ω—ñ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏
    const USER_NAME = localStorage.getItem('USER_NAME') || 'Yaroslav';
    const USER_SURNAME = localStorage.getItem('USER_SURNAME') || 'Batryn';
    const USER_BIRTHDATE = localStorage.getItem('USER_BIRTHDATE') || '10.08.1991';
    const USER_PHONE = localStorage.getItem('USER_PHONE') || '+421940252953';
    const USER_EMAIL = localStorage.getItem('USER_EMAIL') || 'ivanikrakusinko1a1a10111@gmail.com';
    const USER_PASSPORT = 'T';
    const STEP3_SELECT_1_VALUE = localStorage.getItem('STEP3_SELECT_1_VALUE') || '242';
    const STEP3_SELECT_2_VALUE = localStorage.getItem('STEP3_SELECT_2_VALUE') || '243';

    const OPENAI_MODELS = ['gpt-4o', 'gpt-4.1', 'gpt-4.1-mini', 'gpt-4'];
    const OPENAI_API_KEY = localStorage.getItem('OPENAI_API_KEY') || 'sk-proj-7oh1Zgb8SHJoFO7nXeZXpHfF-isuZOyBHLFvJV88xGD1TKvQSW_8DQQ5HwO_gv8sRK1v7PU80vT3BlbkFJ20kJ8hlvm7DDim-90js6HfRAWw92evngeZpsuCQhke1Va4OOUrZIGLtohYxRpaEZ5FA_Xj7ygAA';
    const OPENAI_PROJECT_ID = localStorage.getItem('OPENAI_PROJECT_ID') || 'proj_WWWImdcpG5yV58xSokbj5nbm';
    const TELEGRAM_BOT_TOKEN = localStorage.getItem('TELEGRAM_BOT_TOKEN') || '8041735564:AAEOPeEFkF3RL4kdF8ZS02980WlKggTuV-EA';
    const TELEGRAM_CHAT_ID = localStorage.getItem('TELEGRAM_CHAT_ID') || '814270232A';
    const DEEPSEEK_MODELS = ['deepseek-chat', 'deepseek-coder'];

    // --- –ù–æ–≤–∏–π –∫–æ–¥ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É —Ç–∞ —Ç–∞–π–º–µ—Ä–∞ ---
    async function clearClipboardAndStartTimer() {
        if (navigator.clipboard && navigator.clipboard.writeText) {
            try {
                await navigator.clipboard.writeText('');
                console.log('üßπ –ë—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É –æ—á–∏—â–µ–Ω–æ –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ —Å–∫—Ä–∏–ø—Ç–∞.');
            } catch (err) {
                console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—á–∏—Å—Ç–∏—Ç–∏ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É:', err);
            }
        } else {
            console.warn('‚ö†Ô∏è API –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î—Ç—å—Å—è –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.');
        }

        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–∞–π–º–µ—Ä –Ω–∞ 30 —Å–µ–∫—É–Ω–¥.
        // –Ø–∫—â–æ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –±—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É –≤—Å–µ —â–µ –ø–æ—Ä–æ–∂–Ω—ñ–π, —Ü–µ –º–æ–∂–µ —Å–≤—ñ–¥—á–∏—Ç–∏ –ø—Ä–æ –∑–∞–≤–∏—Å–∞–Ω–Ω—è.
        setTimeout(async () => {
            if (isScriptStopped) return;
            try {
                const clipboardContent = await navigator.clipboard.readText();
                if (!clipboardContent.trim()) {
                    console.warn('üïí –ë—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É –ø–æ—Ä–æ–∂–Ω—ñ–π —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥. –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏.');
                    handleReloadScenario(); // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É, —è–∫—â–æ –±—É—Ñ–µ—Ä –≤—Å–µ —â–µ –ø–æ—Ä–æ–∂–Ω—ñ–π
                } else {
                    console.log('‚úÖ –ë—É—Ñ–µ—Ä –æ–±–º—ñ–Ω—É –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥. –ü—Ä–æ–¥–æ–≤–∂—É—î–º–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞.');
                }
            } catch (err) {
                console.error('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ –±—É—Ñ–µ—Ä–∞ –æ–±–º—ñ–Ω—É –¥–ª—è —Ç–∞–π–º–µ—Ä–∞:', err);
                handleReloadScenario(); // –ù–∞ –≤—Å—è–∫ –≤–∏–ø–∞–¥–æ–∫ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ, —è–∫—â–æ –Ω–µ –º–æ–∂–µ–º–æ –ø—Ä–æ—á–∏—Ç–∞—Ç–∏
            }
        }, 30000); // 30 —Å–µ–∫—É–Ω–¥
    }
    // --- –ö—ñ–Ω–µ—Ü—å –Ω–æ–≤–æ–≥–æ –∫–æ–¥—É ---

    window.addEventListener('load', () => {
        const btn = document.createElement('button');
        btn.textContent = '‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è';
        btn.style = 'position:fixed;top:20px;right:20px;z-index:9999;padding:8px 12px;background:#333;color:white;border:none;border-radius:5px;cursor:pointer;';
        btn.onclick = openSettingsModal;
        document.body.appendChild(btn);

        const stopBtn = document.createElement('button');
        stopBtn.id = 'stopScriptBtn';
        stopBtn.textContent = isScriptStopped ? '‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏' : '‚è∏Ô∏è –°—Ç–æ–ø';
        stopBtn.style = 'position:fixed;top:60px;right:20px;z-index:9999;padding:8px 12px;background:#d9534f;color:white;border:none;border-radius:5px;cursor:pointer;';
        if (isScriptStopped) {
            stopBtn.style.backgroundColor = '#5cb85c'; // –ó–µ–ª–µ–Ω–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏"
        }
        stopBtn.onclick = toggleScriptStop;
        document.body.appendChild(stopBtn);
    });

    window.openSettingsModal = function () {
        const html = `
            <div id="settingsModal" style="position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.5);z-index:9999;display:flex;align-items:center;justify-content:center;">
                <div style="background:white;padding:20px;border-radius:8px;max-width:500px;width:100%;max-height:90vh;overflow:auto;">
                    <h2 style="margin-top:0;">‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h2>
                    <label>üë§ –Ü–º‚Äô—è: <input id="set_name" value="${USER_NAME}" /></label><br/><br/>
                    <label>üë§ –ü—Ä—ñ–∑–≤–∏—â–µ: <input id="set_surname" value="${USER_SURNAME}" /></label><br/><br/>
                    <label>üéÇ –î–∞—Ç–∞ –Ω–∞—Ä.: <input id="set_birth" value="${USER_BIRTHDATE}" /></label><br/><br/>
                    <label>üìû –¢–µ–ª.: <input id="set_phone" value="${USER_PHONE}" /></label><br/><br/>
                    <label>üìß Email: <input id="set_email" value="${USER_EMAIL}" /></label><br/><br/>
                    <label>üü¶ –ú—ñ—Å—Ç–∞ (–∫–æ–∂–Ω–µ –º—ñ—Å—Ç–æ –Ω–∞ –Ω–æ–≤–æ–º—É —Ä—è–¥–∫—É, –∑ –¥–∞—Ç–æ—é –∞–±–æ –±–µ–∑, –Ω–∞–ø—Ä. OCP Michalovce - 12.12.2025):</label><br/>
                    <textarea id="set_cities" style="width:95%;height:100px;">${USER_CITIES.join('\n')}</textarea><br/><br/>
                    <label>üìã –¢–∏–ø:
                        <select id="set_type">
                            ${[
                                ['213', '228', 'Doklady / pasy ‚Äì ≈Ωiados≈• o vydanie dokladu o pobyte'],
                                ['242', '243', 'Doƒçasn√© √∫toƒçisko ‚Äì Registr√°cia doƒçasn√©ho √∫toƒçiska'],
                                ['242', '250', 'Doƒçasn√© √∫toƒçisko ‚Äì ≈Ωiados≈• o vydanie dokladu o pobyte'],
                                ['216', '225', 'Prechodn√Ω pobyt ‚Äì ≈Ωiados≈• o udelenie prechodn√©ho pobytu'],
                                ['216', '226', 'Prechodn√Ω pobyt ‚Äì ≈Ωiados≈• o obnovenie prechodn√©ho pobytu'],
                                ['216', '249', 'Prechodn√Ω pobyt ‚Äì Podnikanie - udelenie'],
                                ['216', '240', 'Prechodn√Ω pobyt ‚Äì Rodina - udelenie'],
                                ['216', '241', 'Prechodn√Ω pobyt ‚Äì Rodina - obnova'],
                                ['216', '244', 'Prechodn√Ω pobyt ‚Äì Zamestnanie - udelenie'],
                                ['216', '245', 'Prechodn√Ω pobyt ‚Äì Zamestnanie - obnova'],
                                ['218', '224', 'Trval√Ω pobyt ‚Äì neobmedzen√Ω ƒças'],
                                ['218', '223', 'Trval√Ω pobyt ‚Äì –Ω–∞ 5 rokov']
                            ].map(([v1, v2, label]) => `<option value="${v1}|${v2}"${STEP3_SELECT_1_VALUE === v1 && STEP3_SELECT_2_VALUE === v2 ? ' selected' : ''}>${label} (${v1} ‚Üí ${v2})</option>`).join('')}
                        </select>
                    </label><br/><br/>
                    <label>üß† OpenAI API: <input id="set_openai" value="${OPENAI_API_KEY}" /></label><br/><br/>
                    <label>üß† OpenAI Project: <input id="set_openai_proj" value="${OPENAI_PROJECT_ID}" /></label><br/><br/>
                    <label>üì¨ TG Token: <input id="set_tg_token" value="${TELEGRAM_BOT_TOKEN}" /></label><br/><br/>
                    <label>üì¨ TG Chat ID: <input id="set_tg_chat" value="${TELEGRAM_CHAT_ID}" /></label><br/><br/>
                    <button onclick="saveSettings()">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏</button>
                    <button onclick="document.getElementById('settingsModal').remove()">‚ùå –ó–∞–∫—Ä–∏—Ç–∏</button>
                </div>
            </div>
        `;
        const modal = document.createElement('div');
        modal.innerHTML = html;
        document.body.appendChild(modal);
    }

    window.saveSettings = function () {
        localStorage.setItem('USER_NAME', document.getElementById('set_name').value);
        localStorage.setItem('USER_SURNAME', document.getElementById('set_surname').value);
        localStorage.setItem('USER_BIRTHDATE', document.getElementById('set_birth').value);
        localStorage.setItem('USER_PHONE', document.getElementById('set_phone').value);
        localStorage.setItem('USER_EMAIL', document.getElementById('set_email').value);

        const citiesInput = document.getElementById('set_cities').value.split('\n').map(c => c.trim()).filter(c => c);
        localStorage.setItem('USER_CITIES', JSON.stringify(citiesInput));
        localStorage.setItem('currentCityIndex', '0'); // –°–∫–∏–¥–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –Ω–æ–≤–∏—Ö –º—ñ—Å—Ç

        const [v1, v2] = document.getElementById('set_type').value.split('|');
        localStorage.setItem('STEP3_SELECT_1_VALUE', v1);
        localStorage.setItem('STEP3_SELECT_2_VALUE', v2);

        localStorage.setItem('OPENAI_API_KEY', document.getElementById('set_openai').value);
        localStorage.setItem('OPENAI_PROJECT_ID', document.getElementById('set_openai_proj').value);
        localStorage.setItem('TELEGRAM_BOT_TOKEN', document.getElementById('set_tg_token').value);
        localStorage.setItem('TELEGRAM_CHAT_ID', document.getElementById('set_tg_chat').value);
        alert('‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ! –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É');
    }

    window.toggleScriptStop = function () {
        isScriptStopped = !isScriptStopped;
        localStorage.setItem('isScriptStopped', isScriptStopped);
        const stopBtn = document.getElementById('stopScriptBtn');
        if (isScriptStopped) {
            stopBtn.textContent = '‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏';
            stopBtn.style.backgroundColor = '#5cb85c'; // –ó–µ–ª–µ–Ω–∏–π
            console.log('‚è∏Ô∏è –°–∫—Ä–∏–ø—Ç –∑—É–ø–∏–Ω–µ–Ω–æ.');
            sendTelegramMessage('‚è∏Ô∏è –°–∫—Ä–∏–ø—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É.');
        } else {
            stopBtn.textContent = '‚è∏Ô∏è –°—Ç–æ–ø';
            stopBtn.style.backgroundColor = '#d9534f'; // –ß–µ—Ä–≤–æ–Ω–∏–π
            console.log('‚ñ∂Ô∏è –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–æ.');
            sendTelegramMessage('‚ñ∂Ô∏è –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–æ –≤—Ä—É—á–Ω—É.');
            // –Ø–∫—â–æ —Å–∫—Ä–∏–ø—Ç –±—É–ª–æ –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–æ, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π
            runMainScenario();
        }
    }

    /* ------------------------------------------------------------------
        ‚öôÔ∏è   –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ¬´human-like¬ª –ø–∞—É–∑
    ------------------------------------------------------------------ */
    const config = {
        // –º—ñ–∂ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è–º–∏ –∫–ª–∞–≤—ñ—à
        typingDelayMin: 50,
        typingDelayMax: 150,
        typingLongPauseChance: 0.12, // 12 % —à–∞–Ω—Å ¬´–∑–∞–¥—É–º–∞—Ç–∏—Å—å¬ª
        typingLongPauseMin: 280,
        typingLongPauseMax: 800,

        // –ø–µ—Ä–µ–¥ / –ø—ñ—Å–ª—è –ø–æ–ª—è
        preFieldDelayMin: 300,
        preFieldDelayMax: 800,
        postFieldDelayMin: 80,
        postFieldDelayMax: 200,

        // —à–∞–Ω—Å –≤–µ–ª–∏–∫–æ—ó –ø–∞—É–∑–∏ –ø—ñ—Å–ª—è –ø–æ–ª—è
        longRestChance: 0.15,
        longRestMin: 600,
        longRestMax: 1800,

        // ¬´–¥–∂–∏—Ç—Ç–µ—Ä¬ª –¥–ª—è –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–∏—Ö –ø–æ–ª—ñ–≤
        delayedFieldJitterMin: 50,
        delayedFieldJitterMax: 250,

        // –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è DOM-–µ–ª–µ–º–µ–Ω—Ç–∞
        waitForElementMaxAttempts: 50,
        waitForElementInterval: 200,
    };

    /* ------------------------------------------------------------------
        üèó   –£—Ç–∏–ª—ñ—Ç–∏
    ------------------------------------------------------------------ */
    const wait = (ms) => new Promise((r) => setTimeout(r, ms));

    // –ü—Å–µ–≤–¥–æ-–≥–∞—É—Å–æ–≤–∏–π (triangular) —Ä–æ–∑–ø–æ–¥—ñ–ª: –±—ñ–ª—å—à—ñ—Å—Ç—å –∑–Ω–∞—á–µ–Ω—å –±–ª–∏–∂—á–µ –¥–æ —Å–µ—Ä–µ–¥–∏–Ω–∏
    function weightedRandomDelay(min, max) {
        const r = (Math.random() + Math.random()) / 2; // 0‚Äì1   –ø—ñ–∫ ‚âà0.5
        return Math.round(min + (max - min) * r);
    }

    let lastMessageId = 0;

    // –¶—è —Ñ—É–Ω–∫—Ü—ñ—è checkTelegram –±—É–ª–∞ –∑–º—ñ–Ω–µ–Ω–∞, —â–æ–± –Ω–µ —Ä–æ–±–∏—Ç–∏ –ø–æ—Å—Ç—ñ–π–Ω—ñ –∑–∞–ø–∏—Ç–∏, —è–∫—â–æ —Ü–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä—ñ—é
    // —ñ –Ω–µ –≤–ø–ª–∏–≤–∞—Ç–∏–º–µ –Ω–∞ –ª–æ–≥—ñ–∫—É –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è.
    async function checkTelegram() {
        // –ó–∞–ª–∏—à–∏–≤ —Ñ—É–Ω–∫—Ü—ñ—é, –∞–ª–µ —ó—ó –≤–∏–∫–ª–∏–∫ –≤ —Ü–∏–∫–ª—ñ `startTelegramLoop` –∑–∞–∫–æ–º–µ–Ω—Ç–æ–≤–∞–Ω–æ –Ω–∏–∂—á–µ.
        // –¶–µ –∑–∞–ø–æ–±—ñ–≥–∞—î –∑–∞–π–≤–∏–º API-–∑–∞–ø–∏—Ç–∞–º, —è–∫—â–æ –≤–∏ –Ω–µ –ø–ª–∞–Ω—É—î—Ç–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ –∑ Telegram.
        // –Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏, —Ä–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ `startTelegramLoop()`
        // —ñ –¥–æ–¥–∞–π—Ç–µ –ª–æ–≥—ñ–∫—É –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥.
    }

    function triggerEvents(el) {
        el.dispatchEvent(new Event('input', { bubbles: true }));
        el.dispatchEvent(new Event('change', { bubbles: true }));
        el.dispatchEvent(new Event('blur', { bubbles: true }));
    }

    async function sendTelegramMessage(text) {
        try {
            const url = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;
            await fetch(url, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ chat_id: TELEGRAM_CHAT_ID, text, parse_mode: 'HTML' }),
            });
        } catch (err) {
            console.error('‚ùå Telegram:', err);
        }
    }

    /* ------------------------------------------------------------------
        üìñ   –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞ –≤ DOM
    ------------------------------------------------------------------ */
    function waitForElement(id) {
        return new Promise((resolve) => {
            let attempts = 0;
            const int = setInterval(() => {
                if (isScriptStopped) { // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑—É–ø–∏–Ω–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
                    clearInterval(int);
                    resolve(null);
                    return;
                }
                const el = document.getElementById(id);
                if (el) {
                    clearInterval(int);
                    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç: ${id}`);
                    resolve(el);
                } else if (++attempts >= config.waitForElementMaxAttempts) {
                    clearInterval(int);
                    console.warn(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç: ${id}. –î–æ—Å—è–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Å–ø—Ä–æ–±.`);
                    resolve(null);
                }
            }, config.waitForElementInterval);
        });
    }

    /* ------------------------------------------------------------------
        ‚å®Ô∏è   –ù–∞–±—ñ—Ä —Ç–µ–∫—Å—Ç—É ¬´–ø–æ-–ª—é–¥—Å—å–∫–∏¬ª
    ------------------------------------------------------------------ */
    async function typeValue(el, value) {
        if (isScriptStopped) return;
        el.value = '';
        triggerEvents(el);
        await wait(weightedRandomDelay(60, 140));

        for (const char of String(value)) {
            if (isScriptStopped) return;
            el.value += char;
            el.dispatchEvent(new Event('input', { bubbles: true }));
            await wait(weightedRandomDelay(config.typingDelayMin, config.typingDelayMax));
            if (Math.random() < config.typingLongPauseChance) {
                await wait(weightedRandomDelay(config.typingLongPauseMin, config.typingLongPauseMax));
            }
        }
        triggerEvents(el);
    }

    /* ------------------------------------------------------------------
        üñº   –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è CAPTCHA (GPT-4o Vision)
    ------------------------------------------------------------------ */
    async function imageToBase64(img) {
        return new Promise((res) => {
            const canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            const ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            res(canvas.toDataURL('image/png'));
        });
    }

    let skipSubmit = false; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è, —è–∫—â–æ CAPTCHA –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞, —â–æ–± –Ω–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Ñ–æ—Ä–º—É

    async function recognizeCaptcha(imageDataUrl) {
        if (isScriptStopped) return '1';
        console.log('üîç –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∫–∞–ø—á—ñ –≤ OpenAI‚Ä¶');

        for (const model of OPENAI_MODELS) {
            if (isScriptStopped) return '1';
            try {
                const response = await fetch('https://api.openai.com/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        Authorization: `Bearer ${OPENAI_API_KEY}`,
                        'OpenAI-Beta': 'assistants=v1',
                        'OpenAI-Project': OPENAI_PROJECT_ID,
                    },
                    body: JSON.stringify({
                        model: model,
                        messages: [
                            {
                                role: 'user',
                                content: [
                                    {
                                        type: 'text',
                                        text: 'Extract only the exact 5-character CAPTCHA code (a-z, 0-9). No explanations, no quotes, no extra text. It is only lowercase English letters and numbers are allowed.',
                                    },
                                    {
                                        type: 'image_url',
                                        image_url: { url: imageDataUrl },
                                    },
                                ],
                            },
                        ],
                        max_tokens: 10,
                    }),
                });

                const result = await response.json();

                if (!response.ok) {
                    console.warn(`‚ö†Ô∏è –ú–æ–¥–µ–ª—å ${model} –ø–æ–≤–µ—Ä–Ω—É–ª–∞ –ø–æ–º–∏–ª–∫—É:`, result);
                    continue; // –ü—Ä–æ–±—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É –º–æ–¥–µ–ª—å
                }

                console.log(`üì© –í—ñ–¥–ø–æ–≤—ñ–¥—å OpenAI (${model}):`, result);
                console.log(`‚úÖ –ú–æ–¥–µ–ª—å ${model} —Å–ø—Ä–∞—Ü—é–≤–∞–ª–∞ —É—Å–ø—ñ—à–Ω–æ`);

                let captchaText = result?.choices?.[0]?.message?.content?.trim();
                // –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ —Ñ–æ—Ä–º–∞—Ç CAPTCHA (5 —Å–∏–º–≤–æ–ª—ñ–≤, —Ç—ñ–ª—å–∫–∏ –±—É–∫–≤–∏/—Ü–∏—Ñ—Ä–∏)
                if (!captchaText || captchaText.length !== 5 || !/^[a-z0-9]{5}$/.test(captchaText)) {
                    console.warn(`‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å AI (${captchaText}). –û—á—ñ–∫—É–≤–∞–≤—Å—è 5-—Å–∏–º–≤–æ–ª—å–Ω–∏–π –∫–æ–¥ (a-z, 0-9). –í–∏–∫–æ—Ä. "1" —Ç–∞ –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∞–±–º—ñ—Ç.`);
                    skipSubmit = true;
                    return '1'; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ 1, —â–æ–± —Å–∫—Ä–∏–ø—Ç –Ω–µ –∑—É–ø–∏–Ω—è–≤—Å—è, –∞–ª–µ –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∞–±–º—ñ—Ç
                } else {
                    skipSubmit = false;
                    return captchaText;
                }

            } catch (err) {
                console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ –º–æ–¥–µ–ª–ª—é ${model}:`, err);
                // –ü—Ä–æ–±—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω—É –º–æ–¥–µ–ª—å
            }
        }

        console.error('‚ùå –£—Å—ñ –º–æ–¥–µ–ª—ñ –Ω–µ –¥–∞–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ "1" —Ç–∞ –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–∞–±–º—ñ—Ç.');
        skipSubmit = true;
        return '1';
    }

    async function typeCaptchaLikeHuman(el, text) {
        if (isScriptStopped) return;
        el.focus();
        el.value = '';
        triggerEvents(el);

        for (const char of text) {
            if (isScriptStopped) return;
            el.dispatchEvent(new KeyboardEvent('keydown', { key: char, bubbles: true }));
            el.value += char;
            triggerEvents(el);
            await wait(weightedRandomDelay(90, 160));
        }

        triggerEvents(el);
        el.blur();
    }

    async function solveCaptcha() {
        if (isScriptStopped) return;
        const imgEl = await waitForElement('captchaImage');
        const inputEl = await waitForElement('answer');
        if (!imgEl || !inputEl) {
            console.error('‚ùå –ï–ª–µ–º–µ–Ω—Ç–∏ CAPTCHA –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.');
            handleReloadScenario();
            return;
        }

        const base64 = await imageToBase64(imgEl);
        const text = await recognizeCaptcha(base64);
        await typeCaptchaLikeHuman(inputEl, text);
        inputEl.style.cssText = 'border:2px solid lime;background:#eaffea;';
        setTimeout(() => (inputEl.style.cssText = ''), 3000);
    }

    /* ------------------------------------------------------------------
        üóí   –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ–ª—ñ–≤
    ------------------------------------------------------------------ */
    const delayedFields = {
        'residence-address-county-0': 2000,
        'residence-address-municipality-0': 2000,
        'residence-address-street-0': 2000,
        'fs13-0-travel-doc-type': 500,
        's42-check-gdpr-info': 1000,
        submitter1: 650,
    };

    const step1Fields = [
        ['fs3-name-10', USER_NAME, 'text'],
        ['fs1-surname-10', USER_SURNAME, 'text'],
        [
            'fs7-date-of-birth0',
            async (el) => {
                if (isScriptStopped) return;
                el.focus();
                await wait(120);
                el.value = USER_BIRTHDATE;
                triggerEvents(el);
                await wait(240);
                // –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∫—É—Ä—Å–æ—Ä–∞ —ñ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫—Ä–∞–ø–æ–∫ (–æ—Ä–∏–≥. –ª–æ–≥—ñ–∫–∞)
                for (let i = 0; i < 10; i++) {
                    if (isScriptStopped) return;
                    el.dispatchEvent(new KeyboardEvent('keydown', { key: 'ArrowLeft', bubbles: true }));
                    el.dispatchEvent(new KeyboardEvent('keyup', { key: 'ArrowLeft', bubbles: true }));
                    await wait(50);
                }
                for (let i = 0; i < 2; i++) {
                    if (isScriptStopped) return;
                    el.dispatchEvent(new KeyboardEvent('keydown', { key: 'Delete', bubbles: true }));
                    el.dispatchEvent(new KeyboardEvent('keyup', { key: 'Delete', bubbles: true }));
                    await wait(50);
                }
                triggerEvents(el);
            },
            'custom',
        ],
        ['s41-delivery-phone-captcha', USER_PHONE, 'text'],
        ['email0', USER_EMAIL, 'text'],
    ];

    const step2Fields = [
        // ['USER_CITY_RADIO_ID', true, 'radio'], // –¶–µ –±—É–ª–æ —Ç—É—Ç, –∞–ª–µ —Ç–µ–ø–µ—Ä –æ–±—Ä–æ–±–ª—è—î–º–æ –≤—Ä—É—á–Ω—É.
        ['s42-check-gdpr-info', true, 'checkbox'],
        ['fs13-0-travel-doc-type', '1', 'select'],
        ['fs13-travel-doc-number', USER_PASSPORT, 'text'],
        ['submitter1', null, 'click'],
    ];

    // --- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (—è–∫—â–æ —Å–ª–æ—Ç—ñ–≤ –Ω–µ–º–∞—î –∞–±–æ –ø–æ–º–∏–ª–∫–∞) ---
    async function handleReloadScenario() {
        console.log(`‚ùå –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Å–ª–æ—Ç—ñ–≤ –∞–±–æ —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –¥–ª—è –º—ñ—Å—Ç–∞: ${USER_CITY_FULL_STRING}. –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∞–±–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ.`);
        await sendTelegramMessage(`‚ùå –ù–µ–º–∞—î —Å–ª–æ—Ç—ñ–≤ –∞–±–æ –ø–æ–º–∏–ª–∫–∞ –¥–ª—è ${USER_CITY_FULL_STRING}. –°–ø—Ä–æ–±–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –º—ñ—Å—Ç–∞.`);

        currentCityIndex++;
        if (currentCityIndex >= USER_CITIES.length) {
            currentCityIndex = 0; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –ø–æ—á–∞—Ç–∫—É, —è–∫—â–æ –≤—Å—ñ –º—ñ—Å—Ç–∞ –ø–µ—Ä–µ–±—Ä–∞–ª–∏
            console.log('üîÑ –£—Å—ñ –º—ñ—Å—Ç–∞ –ø–µ—Ä–µ–±—Ä–∞–Ω–æ. –ü–æ—á–∏–Ω–∞—î–º–æ —Å–ø–æ—á–∞—Ç–∫—É.');
        }
        localStorage.setItem('currentCityIndex', currentCityIndex.toString());
        // –û–Ω–æ–≤–ª—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–æ—ó —ñ—Ç–µ—Ä–∞—Ü—ñ—ó
        USER_CITY_FULL_STRING = USER_CITIES[currentCityIndex];
        USER_CITY_PREFIX = USER_CITY_FULL_STRING.split(' - ')[0];

        location.reload(); // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    }
    // --- –ö—ñ–Ω–µ—Ü—å —Ñ—É–Ω–∫—Ü—ñ—ó handleReloadScenario ---

    /* ------------------------------------------------------------------
        üîÑ   –ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—ñ–≤ (human-like)
    ------------------------------------------------------------------ */
    async function fillFields(fields, label) {
        if (isScriptStopped) return;
        for (const [id, value, type] of fields) {
            if (isScriptStopped) return;
            let el = document.getElementById(id);

            // –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –æ–±—Ä–æ–±–∫–∞ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ –º—ñ—Å—Ç–∞
            if (!el && type === 'radio' && id === 'USER_CITY_RADIO_ID') { // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ placeholder ID
                // –®—É–∫–∞—î–º–æ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫—É, ID —è–∫–æ—ó –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ USER_CITY_PREFIX
                // —Ç–∞ —è–∫–∞ –≤–∫–ª—é—á–∞—î –ø–æ–≤–Ω–∏–π —Ä—è–¥–æ–∫ USER_CITY_FULL_STRING
                const cityRadioButtons = [...document.querySelectorAll('input[type="radio"][name="offices"]')];
                let foundSpecificCity = false;

                for (const radio of cityRadioButtons) {
                    if (radio.id && radio.id.startsWith(USER_CITY_PREFIX) && radio.id.includes(USER_CITY_FULL_STRING)) {
                        el = radio;
                        foundSpecificCity = true;
                        break;
                    }
                }

                if (el) {
                    el.checked = true;
                    triggerEvents(el);
                    const now = new Date().toLocaleString();
                    const msg = `üïí ${now}\n‚úÖ –í–∏–±—Ä–∞–Ω–æ –º—ñ—Å—Ç–æ: ${el.id}\n‚û°Ô∏è ${STEP3_SELECT_1_VALUE} --> ${STEP3_SELECT_2_VALUE}`;
                    console.log(msg);
                    await sendTelegramMessage(msg);
                } else {
                    // –Ø–∫—â–æ –∂–æ–¥–Ω–∞ –∑ –≤–∏–±—Ä–∞–Ω–∏—Ö —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ (–≤–∫–ª—é—á–Ω–æ –∑ "—Ä–∏—Å–æ—á–∫–æ—é")
                    console.warn(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫—É –¥–ª—è –º—ñ—Å—Ç–∞ "${USER_CITY_FULL_STRING}".`);
                    // –ù–µ —Ä–æ–±–∏–º–æ reload –æ–¥—Ä–∞–∑—É, –¥–æ–∑–≤–æ–ª–∏–º–æ –∑–∞–≥–∞–ª—å–Ω—ñ–π –ª–æ–≥—ñ—Ü—ñ handleReloadScenario —Å–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Å–ª–æ—Ç—ñ–≤
                    return false; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ false, —â–æ–± –≤–∫–∞–∑–∞—Ç–∏ –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É
                }
            } else if (!el) {
                console.warn(`‚ö†Ô∏è –ï–ª–µ–º–µ–Ω—Ç ${id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.`);
                continue;
            }

            const preDelay = delayedFields[id]
                ? delayedFields[id] + weightedRandomDelay(config.delayedFieldJitterMin, config.delayedFieldJitterMax)
                : weightedRandomDelay(config.preFieldDelayMin, config.preFieldDelayMax);
            await wait(preDelay);
            if (isScriptStopped) return;

            if (el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT') {
                el.focus();
                await wait(weightedRandomDelay(50, 180));
            }

            try {
                switch (type) {
                    case 'text':
                        await typeValue(el, value);
                        break;
                    case 'select':
                        el.value = value;
                        triggerEvents(el);
                        break;
                    case 'checkbox':
                        el.checked = Boolean(value);
                        triggerEvents(el);
                        break;
                    case 'click':
                        el.click();
                        break;
                    case 'custom':
                        await value(el);
                        break;
                    case 'radio': // –î–ª—è —ñ–Ω—à–∏—Ö —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–æ–∫ (–Ω–µ –º—ñ—Å—Ç–∞)
                        el.checked = true;
                        triggerEvents(el);
                        break;
                }
            } catch (e) {
                console.error(`[${label}] –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—è ${id}:`, e);
                // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—è, —Ü–µ –º–æ–∂–µ —Å–≤—ñ–¥—á–∏—Ç–∏ –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º–∏ –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–æ—é
                handleReloadScenario();
                return false; // –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ü–∏–∫–ª –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è
            }

            await wait(weightedRandomDelay(config.postFieldDelayMin, config.postFieldDelayMax));
            if (Math.random() < config.longRestChance) {
                await wait(weightedRandomDelay(config.longRestMin, config.longRestMax));
            }
        }
        return true; // –í—Å—ñ –ø–æ–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –∞–±–æ –ø—Ä–æ–ø—É—â–µ–Ω—ñ
    }

    /* ------------------------------------------------------------------
        üöÄ   –û—Å–Ω–æ–≤–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π
    ------------------------------------------------------------------ */
    async function runMainScenario() {
        if (isScriptStopped) {
            console.log('–°–∫—Ä–∏–ø—Ç –∑—É–ø–∏–Ω–µ–Ω–æ. –ó–∞–ø—É—Å–∫ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω–æ.');
            return;
        }

        console.log(`üöÄ –°—Ç–∞—Ä—Ç –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –¥–ª—è –º—ñ—Å—Ç–∞: ${USER_CITY_FULL_STRING}`);

        await clearClipboardAndStartTimer(); // –û—á–∏—â–µ–Ω–Ω—è –±—É—Ñ–µ—Ä–∞ —Ç–∞ –∑–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
        await wait(weightedRandomDelay(800, 1500));

        // üîò –ù–∞—Ç–∏—Å–∫–∞–Ω–Ω—è langSK –æ–¥—Ä–∞–∑—É –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ
        const langBtn = await waitForElement('langSK');
        if (langBtn) {
            langBtn.click();
            console.log('üöÄ "langSK" –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ');
            await wait(2500); // –¥–∞—î–º–æ —á–∞—Å –∑'—è–≤–∏—Ç–∏—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É

            const captchaError = [...document.querySelectorAll('span, div')]
                .find(el => el.textContent?.toLowerCase().includes('nespr√°vny k√≥d') || el.textContent?.toLowerCase().includes('nespr√°vne'));

            if (captchaError) {
                console.warn('‚ùå –ö–∞–ø—á–∞ –Ω–µ–≤—ñ—Ä–Ω–∞. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...');
                handleReloadScenario();
                return;
            }
        } else {
            console.warn('‚ùå –ö–Ω–æ–ø–∫–∞ langSK –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –Ω–∞–≤—ñ—Ç—å –ø—ñ—Å–ª—è –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è. –ú–æ–∂–ª–∏–≤–æ, –º–æ–≤–∞ –≤–∂–µ SK.');
        }

        await wait(2239); // –¥–∞—î–º–æ —á–∞—Å –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É

        // 1Ô∏è‚É£ CAPTCHA
        await solveCaptcha();
        if (isScriptStopped) return;

        // 2Ô∏è‚É£ Step 1 - –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        const step1Success = await fillFields(step1Fields, 'Step 1');
        if (isScriptStopped || !step1Success) return;

        // –ù–∞—Ç–∏—Å–∫–∞—î–º–æ –∫–Ω–æ–ø–∫—É "loadSecondFormButton" –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ –¥—Ä—É–≥–∏–π –∫—Ä–æ–∫
        if (!skipSubmit) {
            const btn = document.getElementById('loadSecondFormButton');
            if (btn) {
                btn.click();
                console.log('üöÄ "loadSecondFormButton" –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ');
                await wait(2500); // –¥–∞—î–º–æ —á–∞—Å –∑'—è–≤–∏—Ç–∏—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É

                const captchaError = [...document.querySelectorAll('span, div')]
                    .find(el => el.textContent?.toLowerCase().includes('nespr√°vny k√≥d') || el.textContent?.toLowerCase().includes('nespr√°vne'));
                if (captchaError) {
                    console.warn('‚ùå –ö–∞–ø—á–∞ –Ω–µ–≤—ñ—Ä–Ω–∞ –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ —Å–∞–±–º—ñ—Ç—É. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...');
                    handleReloadScenario();
                    return;
                }
            } else {
                console.warn('‚ùå –ö–Ω–æ–ø–∫–∞ loadSecondFormButton –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...');
                handleReloadScenario();
                return;
            }
        } else {
            console.warn('üö´ –ö–∞–ø—á–∞ –Ω–µ–≤—ñ—Ä–Ω–∞ –∞–±–æ –±—É–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞. –ö–Ω–æ–ø–∫–∞ "loadSecondFormButton" –Ω–µ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∞. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...');
            handleReloadScenario();
            return;
        }

        // 3Ô∏è‚É£ –í–∏–±—ñ—Ä —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ –º—ñ—Å—Ç–∞
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –æ–±—Ä–∞–Ω–µ –º—ñ—Å—Ç–æ –∑ "—Ä–∏—Å–æ—á–∫–æ—é" –≤ —ñ—Å–Ω—É—é—á–∏—Ö —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∞—Ö
        const cityRadioButtons = [...document.querySelectorAll('input[type="radio"][name="offices"]')];
        let targetCityRadio = null;
        let cityIdFound = false;

        for (const radio of cityRadioButtons) {
            if (radio.id && radio.id.startsWith(USER_CITY_PREFIX) && radio.id.includes(USER_CITY_FULL_STRING)) {
                targetCityRadio = radio;
                cityIdFound = true;
                break;
            }
        }

        if (targetCityRadio) {
            targetCityRadio.checked = true;
            triggerEvents(targetCityRadio);
            console.log(`‚úÖ –í–∏–±—Ä–∞–Ω–æ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫—É –¥–ª—è –º—ñ—Å—Ç–∞: ${USER_CITY_FULL_STRING}`);
            await sendTelegramMessage(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ —Ç–∞ –≤–∏–±—Ä–∞–Ω–æ –º—ñ—Å—Ç–æ: ${USER_CITY_FULL_STRING}`);
            await wait(weightedRandomDelay(500, 1000)); // –î–∞—î–º–æ —á–∞—Å –ø—ñ—Å–ª—è –≤–∏–±–æ—Ä—É —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏
        } else {
            console.warn(`‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫—É –¥–ª—è –º—ñ—Å—Ç–∞ "${USER_CITY_FULL_STRING}". –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.`);
            handleReloadScenario();
            return;
        }

        // –ó–∞–ø–æ–≤–Ω—é—î–º–æ —Ä–µ—à—Ç—É –ø–æ–ª—ñ–≤ Step 2 (–∫—Ä—ñ–º —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ –º—ñ—Å—Ç–∞, —è–∫—É –≤–∂–µ –æ–±—Ä–æ–±–∏–ª–∏)
        const step2Success = await fillFields(step2Fields.filter(([id]) => id !== 'USER_CITY_RADIO_ID'), 'Step 2');
        if (isScriptStopped || !step2Success) return;

        // 4Ô∏è‚É£ –ß–µ–∫–∞—î–º–æ —Å–µ–ª–µ–∫—Ç –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –ø–æ—Å–ª—É–≥–∏ (f1-life-situation-select2)
        const serviceTypeSelect = await waitForElement('f1-life-situation-select2');
        if (!serviceTypeSelect) {
            console.error('‚ùå –°–µ–ª–µ–∫—Ç –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –ø–æ—Å–ª—É–≥–∏ (f1-life-situation-select2) –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.');
            handleReloadScenario();
            return;
        }

        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è —Å–µ–ª–µ–∫—Ç—É —Ç–∏–ø—É –ø–æ—Å–ª—É–≥–∏
        const optionForServiceType = serviceTypeSelect.querySelector(`option[value="${STEP3_SELECT_2_VALUE}"]`);
        if (optionForServiceType) {
            serviceTypeSelect.value = STEP3_SELECT_2_VALUE; // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞–ø—Ä—è–º—É
            triggerEvents(serviceTypeSelect); // –¢—Ä–∏–≥–µ—Ä–∏–º–æ –ø–æ–¥—ñ—ó, —â–æ–± —Å–∏—Å—Ç–µ–º–∞ –æ–Ω–æ–≤–∏–ª–∞ —Å–ª–æ—Ç–∏
            console.log(`‚úÖ –°–µ–ª–µ–∫—Ç –ø–æ—Å–ª—É–≥–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ ${STEP3_SELECT_2_VALUE}. –û—á—ñ–∫—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ª–æ—Ç—ñ–≤.`);
            await wait(weightedRandomDelay(3000, 5000)); // –ó–∞—á–µ–∫–∞–π—Ç–µ 3-5 —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∏ —Å–ª–æ—Ç–∏ –æ–Ω–æ–≤–ª—è—Ç—å—Å—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
        } else {
            console.warn(`‚ùå –û–ø—Ü—ñ—è —Ç–∏–ø—É –ø–æ—Å–ª—É–≥–∏ –∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º "${STEP3_SELECT_2_VALUE}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ —É —Å–µ–ª–µ–∫—Ç—ñ. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.`);
            await sendTelegramMessage(`‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –æ–ø—Ü—ñ—ó ${STEP3_SELECT_2_VALUE} –¥–ª—è –º—ñ—Å—Ç–∞ ${USER_CITY_FULL_STRING}.`);
            handleReloadScenario();
            return;
        }

        // *** –¢–£–¢ –í–Ü–î–ë–£–í–ê–Ñ–¢–¨–°–Ø –ü–ï–†–ï–í–Ü–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–Ü –°–õ–û–¢–Ü–í ***
        const noSlotsMessageElement = [...document.querySelectorAll('span, div, p')]
            .find(el => el.textContent?.toLowerCase().includes('≈æiadne voƒæn√© term√≠ny') || el.textContent?.toLowerCase().includes('no available appointments'));

        if (noSlotsMessageElement) {
            console.warn('‚ùå –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –≤—ñ–ª—å–Ω–∏—Ö —Ç–µ—Ä–º—ñ–Ω—ñ–≤. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.');
            handleReloadScenario();
            return;
        }

        // 4Ô∏è‚É£ PIN-–∫–æ–¥ ‚Üí –¥–æ–≤–∞–Ω—Ç–∞–∂—É—î–º–æ selects
        // –¶–µ–π –±–ª–æ–∫ –∫–æ–¥—É –ø–µ—Ä–µ–º—ñ—â–µ–Ω–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –≤—ñ–Ω –º–∞—î —Å–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞—Ç–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤–∏–±–æ—Ä—É –º—ñ—Å—Ç–∞ —Ç–∞ –ø–æ—Å–ª—É–≥–∏.
        const pinCodeEl = await waitForElement('pin-code');
        if (pinCodeEl) {
            // –û—á—ñ–∫—É—î–º–æ 10.5 —Å–µ–∫—É–Ω–¥, —â–æ–± –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏—Å—è, —â–æ PIN-–∫–æ–¥ –∑ Telegram –≤–∂–µ –≤ –±—É—Ñ–µ—Ä—ñ –æ–±–º—ñ–Ω—É
            await wait(10500);
            if (isScriptStopped) return;
            try {
                const clipboard = await navigator.clipboard.readText();
                const pin = clipboard.trim();
                if (!/^\d{4,8}$/.test(pin)) {
                    console.warn('‚ö†Ô∏è PIN –∑ –±—É—Ñ–µ—Ä–∞ –Ω–µ —Å—Ö–æ–∂–∏–π –Ω–∞ –∫–æ–¥:', pin);
                }
                pinCodeEl.focus();
                await typeValue(pinCodeEl, pin);
                console.log(`üîê PIN –∑ –±—É—Ñ–µ—Ä–∞ –≤—Å—Ç–∞–≤–ª–µ–Ω–æ: ${pin}`);

                const submitBtn = document.getElementById('loadMain');
                if (submitBtn) {
                    submitBtn.click();
                    console.log('üöÄ "Odosla≈•" –Ω–∞—Ç–∏—Å–Ω—É—Ç–æ');
                }

                await wait(3150);
                if (isScriptStopped) return;

                const select1 = document.getElementById('f1-life-situation-select1');
                const option1 = select1?.querySelector(`option[value="${STEP3_SELECT_1_VALUE}"]`);
                if (option1) {
                    select1.value = STEP3_SELECT_1_VALUE;
                    triggerEvents(select1);
                    console.log('‚úÖ select1 –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
                } else {
                     console.warn(`‚ùå –û–ø—Ü—ñ—è —Ç–∏–ø—É –ø–æ—Å–ª—É–≥–∏ –∑ –∑–Ω–∞—á–µ–Ω–Ω—è–º "${STEP3_SELECT_1_VALUE}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ —É —Å–µ–ª–µ–∫—Ç—ñ. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.`);
                     handleReloadScenario();
                     return;
                }

                // –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É Telegram —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ñ–æ—Ä–º–∏
                // startTelegramLoop(); // –ó–∞–∫–æ–º–µ–Ω—Ç—É–≤–∞–≤, —è–∫—â–æ –≤–∏ –Ω–µ —Ö–æ—á–µ—Ç–µ –ø–æ—Å—Ç—ñ–π–Ω–æ —á–µ–∫–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ –∑ –¢–ì.

                console.log('üéâ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–ª—å–Ω—ñ —Å–ª–æ—Ç–∏! –£—Å—ñ —Ñ–æ—Ä–º–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ. –û—á—ñ–∫—É—î–º–æ –Ω–∞ –ø–æ–¥–∞–ª—å—à—ñ –¥—ñ—ó (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≤–∏–±—ñ—Ä –¥–∞—Ç–∏).');
            } catch (err) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ PIN-–∫–æ–¥—É –∞–±–æ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—ñ —Ñ—ñ–Ω–∞–ª—å–Ω–∏—Ö –ø–æ–ª—ñ–≤:', err);
                handleReloadScenario();
            }
        } else {
            console.warn('‚ùå –ü–æ–ª–µ –¥–ª—è PIN-–∫–æ–¥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ú–æ–∂–ª–∏–≤–æ, —Å–ª–æ—Ç—ñ–≤ –Ω–µ–º–∞—î –∞–±–æ —Å—Ç–∞–ª–∞—Å—è —ñ–Ω—à–∞ –ø–æ–º–∏–ª–∫–∞.');
            // –Ø–∫—â–æ –ø–æ–ª–µ PIN-–∫–æ–¥—É –Ω–µ –∑'—è–≤–∏–ª–æ—Å—è, —Ü–µ —Ç–µ–∂ —Å–≤—ñ–¥—á–∏—Ç—å –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Å–ª–æ—Ç—ñ–≤ –∞–±–æ —ñ–Ω—à—É –ø—Ä–æ–±–ª–µ–º—É
            handleReloadScenario();
        }
    }

    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ—Å–Ω–æ–≤–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π, –∫–æ–ª–∏ DOM –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
    window.addEventListener('DOMContentLoaded', () => {
        if (!isScriptStopped) {
            runMainScenario();
        } else {
            console.log('–°–∫—Ä–∏–ø—Ç –∑—É–ø–∏–Ω–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ, –Ω–µ –∑–∞–ø—É—Å–∫–∞—î–º–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.');
            sendTelegramMessage('–°–∫—Ä–∏–ø—Ç –±—É–≤ –∑—É–ø–∏–Ω–µ–Ω–∏–π —ñ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–≤—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏".');
        }
    });

})();
